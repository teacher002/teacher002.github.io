[{"categories":["Ubuntu教学"],"content":"安装 检查系统中文环境 在 Ubuntu 设置中打开「区域与语言」—— 「管理已安装的语言」，然后会自动检查已安装语言是否完整。若不完整，根据提示安装即可。 最小安装 为使用 Fcitx 5，需要安装三部分基本内容：\nFcitx 5 主程序 中文输入法引擎 图形界面相关 按照这个思路，可以直接使用 apt 进行安装：\nsudo apt install fcitx5 \\ fcitx5-chinese-addons \\ fcitx5-frontend-gtk4 fcitx5-frontend-gtk3 fcitx5-frontend-gtk2 \\ fcitx5-frontend-qt5 安装中文词库 在 GitHub 打开维基百科中文拼音词库 的 Releases 界面，下载最新版的 .dict 文件。按照 README 的指导，将其复制到 ~/.local/share/fcitx5/pinyin/dictionaries/ 文件夹下即可。\n配置 设置为默认输入法 使用 im-config 工具可以配置首选输入法，在任意命令行输入：\nim-config 环境变量 需要为桌面会话设置环境变量，即将以下配置项写入某一配置文件中：\nexport XMODIFIERS=@im=fcitx export GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx 如果使用 Bash 作为 shell，则建议写入至 ~/.bash_profile，这样只对当前用户生效，而不影响其他用户。\n另一个可以写入此配置的文件为系统级的 /etc/profile。 开机自启动 安装 Fcitx 5 后并没有自动添加到开机自启动中，每次开机后需要手动在应用程序中找到并启动，非常繁琐。\n解决方案非常简单，在 Tweaks（sudo apt install gnome-tweaks）中将 Fcitx 5 添加到「开机启动程序」列表中即可。\nFcitx 配置 Fcitx 5 提供了一个基于 Qt 的强大易用的 GUI 配置工具，可以对输入法功能进行配置。有多种启动该配置工具的方法：\n1 在应用程序列表中打开「Fcitx 配置」 2 在 Fcitx 托盘上右键打开「设置」 3 命令行命令 fcitx5-configtool 根据个人偏好进行设置即可。需要注意的是「输入法」标签页下，应将「键盘 - 英语」放在首位，拼音（或其他中文输入法）放在后面的位置。 自定义主题 Fcitx 5 默认的外观比较朴素，用户可以根据喜好使用自定义主题。\n第一种方式为使用经典用户界面，可以在 GitHub 搜索主题，然后在 Fcitx5 configtool —— 「附加组件」 —— 「经典用户界面」中设置即可。\n第二种方式为使用 Kim面板，一种基于 DBus 接口的用户界面。此处安装了 Input Method Panel 这个 GNOME 扩展，黑色的风格与正在使用的 GNOME 主题 Orchis-dark 非常搭配。 已知问题 修复 JetBrains 系 IDE 显示问题 在 JetBrains 系 IDE（如 PyCharm）中，输入法选择框的位置始终固定于屏幕左下角，而非随输入光标移动，在中文输入很不方便。该问题为 IDE 的 JetBrainsRuntime 缺陷所致。可尝试使用 RikudouPatrickstar/JetBrainsRuntime-for-Linux-x64 这个仓库发布的 JBR 文件解决。\n卸载 iBus 影响 Fcitx 5 正常使用 出于精简空间和减少冲突干扰之考虑，使用 sudo apt remove ibus 卸载了 iBus，但重启（使生效）之后发现 Fcitx 5 受到了影响。具体表现为：除在终端中之外，其他输入场景无法切换至中文输入。使用 apt 装回 iBus，再次重启即又恢复正常。\n检查包依赖关系，卸载 ibus 包后会自动移除 ibus-data、ibus-gtk4、python3-ibus-1.0 三个包，似乎都只是与 iBus 紧密联系的。暂为不解之谜。\n","permalink":"https://teacher002.github.io/posts/ubuntu%E8%BE%93%E5%85%A5%E6%B3%95/","tags":["Ubuntu","Fcitx 5","部署"],"title":"Ubuntu 配置 Fcitx 5 中文输入法"},{"categories":null,"content":"环境配置 工欲善其事，必先利其器。\n集成开发环境 IDE 操作较为简单，一般入门玩家会选用 IDE 来编写代码。在竞赛中最常见的是 Dev-C++（如果考试环境是 Windows 系统，一般也会提供这一 IDE）。\n编译器 Windows 推荐使用 GNU 编译器。需要去 MinGW Distro 下载 MinGW 并安装。此外 Windows 下也可以选择 Microsoft Visual C++ 编译器，需要去 Visual Studio 页面 下载安装。\nmacOS 在终端中执行：\nxcode-select --install Linux 使用 g++ -v 来检查是否安装过 g++。\n使用如下命令可以安装：\nsudo apt update \u0026amp;\u0026amp; sudo apt install g++ 在命令行中编译代码 熟练之后也有玩家会使用更灵活的命令行来编译代码，这样就不依赖 IDE 了，而是使用自己熟悉的文本编辑器编写代码。\ng++ test.cpp -o test -lm g++ 是 C++ 语言的编译器（C 语言的编译器为 gcc），-o 用于指定可执行文件的文件名，编译选项 -lm 用于链接数学库 libm，从而使得使用 math.h 的代码可以正常编译运行。\n注：C++ 程序不需要 -lm 即可正常编译运行。历年 NOI/NOIP 试题的 C++ 编译选项中都带着 -lm，故这里也一并加上。\n第一份代码 通过这样一个示例程序来展开 C++ 入门之旅吧～\n注：请在编写前注意开启英文输入法。\nC++ 语言\n#include \u0026lt;iostream\u0026gt; // 引用头文件 using namespace std; // 引入命名空间（相关阅读 https://oi-wiki.org/lang/namespace/#using ） int main() { // 定义 main 函数 cout \u0026lt;\u0026lt; \u0026#34;Hello, world!\u0026#34;; // 输出 Hello, world! return 0; // 返回 0，结束 main 函数 } C 语言\n#include \u0026lt;stdio.h\u0026gt; // 引用头文件 int main() { // 定义 main 函数 printf(\u0026#34;Hello, world!\u0026#34;); // 输出 Hello, world! return 0; // 返回 0，结束 main 函数 } 注意：C 语言在这里仅做参考，C++ 基本兼容 C 语言，并且拥有许多新的功能，可以让选手在赛场上事半功倍。具体请见 C++ 与其他常用语言区别\n","permalink":"https://teacher002.github.io/posts/hello%E4%BB%A3%E7%A0%81/","tags":null,"title":"Hello, World!"},{"categories":["Linux新闻"],"content":"cachefs 文件系统自从被纳入 Linux 6.7 内核的上游版本以来，一直保持着良好的运行状态。但现如今，随着 Bcachefs 的功能更新被提交到 Linux 6.9 合并窗口，引发了 Linus Torvalds 对其中一些 proposed code 的不满。\n维护者 Kent Overstreet 将针对 Linux 6.9 的 Bcachefs 改动的拉取请求总结为：\nSubvolume children btree；是为 walking subvolumes 提供用户空间界面所必需的，计划在稍后提供 对目录结构检查进行了大量改进 改进了日志管道，显着提高了 high iodepth write workloads 的性能 Discard path 改进：Discard path 更加高效，并且不再不必要地刷新日志 Buffered write path 现在可以避免占用 inode lock 调出用于 XFS 的各种库代码：time stats、mean_and_variance、darray、eytzinger、thread_with_file 新的 mm helper：memalloc_flags_{saverestore} mempool now does kvmalloc mempools 但让 Linus Torvalds 感到不解的是，这些补丁把 Bcachefs 代码中的一些元素移到了一些 library-type 的代码中，以至于可以轻松地被其他文件系统重用。\nLinus Torvalds 在回应相关 PR 时表示：“我看了看 \u0026lsquo;make random bcachefs code be a library function\u0026rsquo; 的内容，觉得毫无意义，最终决定在没有进一步解释的情况下我不会使用它（老实说，我不认为这些解释站得住脚）。”\n并直言 \u0026ldquo;stdio_redirect_printf ()\u0026rdquo; 和 darray_char 都很 “恶心”。建议 Overstreet 将其保留在自己的代码中就好，不要试图提交上来。如果实在不死心的话，建议他先做好以下几点：\n多加解释 有更合理的命名，减少恶心和完全无意义的 interfaces (\u0026ldquo;DARRAY ()\u0026quot;)。\n而且，仅仅找到一个其他文件系统来共享这种代码并不足以证明它是一个合理的 interfaces 和合理的命名。\n但是，最主要的问题是疯狂的数学计算。该死的，我们很久以前就讨论过 \u0026ldquo;mean and variance\u0026rdquo; 这种愚蠢的垃圾。当时就错了，现在还是错的。你没有解释为什么它不能使用简单得多的 MAD（median absolute deviation），而不是使用 variance。这个错误的决定直接导致无意义地使用过于复杂的 128 位数学。\n我当时称其为疯狂的过度工程化，而就我所知，除了一些轻微的类型名称细节外，绝对没有任何变化。\n只要你把它改成某种只适用于 bcachefs 的东西，我就不介意。但现在，你却试图把这些垃圾作为通用库代码推向市场，让其他人也能使用，这就意味着，我会介意这种过度设计的 interfaces。\n在其他方面，time_stats 看上去就像是一个有名称和用途的正常 interfaces，但使用了这种可怕的基础架构后，它就变得不伦不类了。\n在 Overstreet 争辩之后，Linus 进一步补充道：\n加权版本的代码字面上没有任何变化。\nvariance value 是不同的，但 MAD 和 standard deviation 之间的区别基本上只是一个 constant factor（不同的分布会有所不同，但那又怎样？任何特定情况都会有特定的分布）。那么，为什么 constant factor 会对指数加权产生任何影响呢？\n不管怎样，请随意将您的代码保存在 bcachefs 中。也许 xfs 甚至想复制该代码。我不在乎，这看起来很愚蠢，但这是文件系统的选择。但如果我们要把它打造成一个通用的内核库，它就必须是健全的。不要让人们仅仅为了随机统计元素而进行 64 位平方根和 128 位除法。\n因此，就目前情况而言，Linus Torvalds 并没有接受这个针对 Linux 6.9 内核的 Bcachefs 拉取请求。至于后续如何，就要看新的 PR 会不会放弃这些补丁或以其他方式重新修改以满足 Linus 的要求。\n","permalink":"https://teacher002.github.io/posts/linus-torvalds-%E4%B8%8D%E6%BB%A1-linux-6.9-%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B-bcachefs-%E4%BB%A3%E7%A0%81/","tags":["Ubuntu","Linux","Linus"],"title":"Linus Torvalds 不满 Linux 6.9 中的一些 Bcachefs 代码"},{"categories":["Markdwon"],"content":" Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。 由于 Markdown 的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。 如 GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。 优势 世界上最流行的博客平台WordPress和大型CMS如Joomla、Drupal都能很好的支持Markdown。完全采用Markdown编辑器的博客平台有Ghost和Typecho等。用于编写说明文档，以“README.md”的文件名保存在软件的目录下面。Markdown可以快速转化为演讲PPT、Word产品文档甚至是用非常少量的代码完成最小可用原型。\n发展历程 John Gruber在2004年创造了Markdown语言，在语法上有很大一部分是跟亚伦·斯沃茨（Aaron Swartz）共同合作的。这个语言的目的是希望大家使用“易于阅读、易于撰写的纯文字格式，并选择性的转换成有效的XHTML（或是HTML）”。 其中最重要的设计是可读性，也就是说这个语言应该要能直接在字面上的被阅读，而不用被一些格式化指令标记（像是RTF与HTML）。 因此，它是现行电子邮件标记格式的惯例，虽然它也借鉴了很多早期的标记语言，如：Setext、Texile、reStructuredText。 标准化 Markdown已经成为典型的转换为HTML的非正式规范 和参考实现。随着时间的推移，出现了许多Markdown实现。人们开发这些主要是由于在基本语法之上需要额外的功能 - 例如表格，脚注，定义列表（技术上的HTML描述列表）和HTML块内的Markdown。其中一些行为偏离了最开始的参考实现。与此同时，非正式规范中的一些含糊不清引起了人们的注意 。这些问题促使Markdown解析器的一些开发人员努力实现标准化。 2016年3月发布了RFC 7763和RFC 7764。RFC 7763 从原始变体引入了MIME类型 text/markdown。RFC 7764讨论并注册了MultiMarkdown、GitHub Flavored Markdown (GFM)、Pandoc、CommonMark及Markdown等变体。 CommonMark 从2012年开始，包括Jeff Atwood和John MacFarlane在内的一群人启动了标准化工作。一个社区网站旨在记录可用于文档作者和开发人员的各种工具和资源，以及各种markdown实现的实现者。 2014年9月，Gruber反对在这一工作中继续使用“Markdown”这个名字，其被更名为CommonMark。 CommonMark发布了规范、参考实现和测试包的几个版本，并计划在2018年宣布最终的1.0规范和测试包。 GFM 2017年，GitHub发布了基于CommonMark的GitHub Flavored Markdown（GFM）的正式规范。 除了表格、删除线、自动链接和任务列表被GitHub规范作为扩展添加之外，它遵循CommonMark规范。 GitHub还相应地更改了其站点上使用的解析器，这要求更改某些文档 - 例如，GFM要求创建标题的哈希符号由空格字符分隔。 Markdown Extra Markdown Extra是一种轻量级标记语言，基于在PHP（最初）、Python和Ruby中实现的Markdown。它添加了普通Markdown语法不具备的功能。内容管理系统支持Markdown Extra，例如Drupal，TYPO3和MediaWiki。 它为Markdown添加了以下功能： HTML块内的markdown标记 具有id / class属性的元素 围栏代码块 表格 定义清单 脚注 缩写\n","permalink":"https://teacher002.github.io/posts/xuanzexuanze/","tags":["markdown"],"title":"MarkDown讲解"},{"categories":["数学"],"content":"今天是圆周率日(3.14)3月14日 圆周率日（Pi day） 是庆祝圆周率π的特别日子。正式日期是3月14日，由圆周率最常用的近似值3.14而来。圆周率日是一年一度的庆祝数学常数π的节日，时间被定在3月14日。通常是在下午1时59分庆祝，以象征圆周率的六位近似值3.14159，有时甚至精确到26秒，以象征圆周率的八位近似值3.1415926；习惯24小时记时的人在凌晨1时59分或者下午3时9分（15时9分）庆祝。全球各地的一些大学数学系在这天举办派对。\n发展历史 已知最早的大型以π为主题的庆祝活动是Larry Shaw 组织，1988年3月14日在旧金山科学博物馆举办的。Larry Shaw 是旧金山科学博物馆的一名物理学家，那一天他带着博物馆的员工和参与者一起围绕这博物馆纪念碑做3又1/7圈（22/7，π的近似值之一）的圆周运动，并一起吃水果派，分享有关π的知识。之后，旧金山科学博物馆继承了这个传统，在每年的这一天都举办庆祝活动。美国麻省理工学院首先倡议将3日14日定为国家圆周率日。2009年美国众议院正式通过一项无约束力决议（Non-binding resolution）（HRES 224），将每年的3月14号设定为“圆周率日”（National Pi day）。 2010年的圆周率日，谷歌为表庆祝，推出了π的Google Doodle，图中元素颇丰，不仅包含了圆周率的定义，π值范围，圆周周长与面积公式，甚至还包含了球体积公式以及圆周的外切和内切多边形示意图。\n庆祝方式 庆祝圆周率日的方式有很多，比如吃派，喝一种名字中含有“pi”的鸡尾酒（piña colada），玩和pi 发音相近的彩罐游戏（piñata）。 这一天常见的庆祝方式包括：1.阅读π的悠久历史，学习有关π的数学知识。2.背诵π。π是无理数，很多人通过背诵π小数点后面的数字来表现记忆力。日本人Akira Haraguchi在2005年将π背到了小数点后第 83431 位。3.计算圆周率。2009年，法国著名程序员Fabr ice Bellard用个人PC，耗时116天，计算到了PI的小数点后第2.7万亿位打破了由超级计算机保持的圆周率运算记录。同时Fabrice Bellard在圆周率算法方面也有着惊人的成就，1997年他提出了最快圆周率算法公式。4.观看电影《死亡密码 π》（1998年讲述一个偏执数学家故事的惊悚电影）、《少年派的奇幻漂流》（一个名为pi的少年的冒险故事）。5.做一个以π为主题的派。6.欣赏以π为主题的音乐，例如圆周率之歌。校园活动全球各地的一些大学数学系在这天开派对。加拿大滑铁卢大学则在圆周率日免费供应馅饼。麻省理工学院则经常选择在这一天向学生发出录取通知书，从2012年开始，麻省理工宣布，就会于每年圆周率日的下午6:28分（Pi Day, Tau Time），在自己的网站上公布录取信息，以此表明公平对待π和τ。这是由于在数学中，半径的概念似乎比直径更加深入人心。部分数学家们早已注意到了把圆周率定义为周长和直径之比有所不便，曾在论文中正式地提出这一点，认为π应该由另外一个被称作“tau”的数τ来替代 。但也有数学家表示反对，双方的争论颇为激烈。3月14日也是爱因斯坦的生日，爱因斯坦在普林斯顿生活超过20年之久，因此普林斯顿在这一天举办了众多的活动，庆祝圆周率日兼爱因斯坦生辰。除了常规的吃派以及π值背诵比赛等活动，在这一天还有一个爱因斯坦cosplay比赛。\n文化影响 可能是因为定义简单以及在数学公式中随处可见，π在流行文化中的出现频率及地位远远高于其他数学常数。在麻省理工，一些大学生的庆祝语包括“3.14159”。谷歌在2011年一次收购中，谷歌选择一系列著名常数作为报价，其中就包括π。名为piday.org的网站，是圆周率日官方网站，不仅收集了关于π的各种趣闻，还有以π为主题的商店。\n相关日期 7月22日：圆周率日近似值日。22/7是π的一个近似值， 按美式日期记法，即为7月22日。22/7大于π，有趣的是，它比3.14更加接近π。所以圆周率日近似值日实际上比圆周率日更加精确。 1592年3月14日：终极圆周率日。1592年3月14日上午6时53分以美国式记法就是3/14/1592 6:53，对应了圆周率的十位近似值3.141592653。 6月28日：τ（2π）日。2001 年，美国数学家鲍勃·帕莱（Bob Palais）在《数学情报》（The Mathematical Intelligencer）上发表了一篇题为《π 是错误的！》（π Is Wrong!）的论文。称真正的圆周率日是2π，即τ。虽然很多数学家反对，但也有很多学者赞同鲍勃，美国数学家麦克·哈特尔（Michael Hartl） 建立了网站 tauday.com，呼吁人们用希腊字母 τ（发音：tau）来表示“正确的”圆周率。新圆周率的支持者们选择在 6 月 28 日庆祝“真正的”圆周率日。 2019年，国际数学联盟（IMU）正式向联合国教科文组织（UNESCO）提出申请，并于同年11月由联合国大会通过，将每年的3月14日设为“国际数学日”（The International Day of Mathematics）。\n","permalink":"https://teacher002.github.io/posts/piday/","tags":["Math","数学","LaTeX","3.1415926"],"title":"今天是兀日(3.14)"},{"categories":["生活处处有语文"],"content":"寒食 [唐]韩翃 春城无处不飞花，寒食东风御柳斜。\n日暮汉宫传蜡烛，轻烟散入五侯家。\n迢迢牵牛星 [汉] 迢迢牵牛星，皎皎河汉女。 纤纤擢素手，札札弄机杼。 终日不成章，泣涕零如雨。 河汉清且浅，相去复几许！ 盈盈一水间，脉脉不得语。\n十五夜望月 [唐]王建 中庭地白树栖鸦，冷露无声湿桂花。\n今夜月明人尽望，不知秋思落谁家。\n未完待续~ ","permalink":"https://teacher002.github.io/posts/%E5%85%AD%E4%B8%8A%E5%8F%A4%E8%AF%971/","tags":["古诗"],"title":"六上古诗(1)"},{"categories":null,"content":"文雪豹财经社王亚骏\n抱着\u0026quot;反正亏不了多少钱\u0026quot;的心态，安岚（化名）在 TikTok 上试着把中国汽车卖给老外。短短一个季度，她就拿下了 2000 万元的营收，而投入仅 2000 元左右。\n在此之前，她从未有过任何销售工作经验。\n去年 8 月初，安岚带着一身的疲惫从某互联网大厂裸辞，\u0026ldquo;想躺一段时间\u0026rdquo;。但一条新闻让她打消了休息的念头：2023 年上半年，中国汽车出口量同比增超 70%。\u0026ldquo;我一直以为，中国汽车在国外卖不动的。\u0026rdquo;\n她模模糊糊觉得，这其中可能有赚钱的机会。虽然对汽车、对出口贸易都处于\u0026quot;很懵\u0026quot;的状态，但安岚还是决定尽快出国看一看。\n从零起步，用了一个多月时间，安岚摸索出了一套低成本的获客方式，并在解决资金周转的大问题后，跑通了整个交易流程。去年 10 月开始，她迎来了\u0026quot;打开水龙头般\u0026quot;的订单。\n让安岚\u0026quot;一季暴富\u0026quot;的生意，用专业术语描述的话，就是\u0026quot;汽车平行出口\u0026quot;——非官方授权经销商，将国内的新车以二手车的形式出口到国外。据乘联会秘书长崔东树估算，2023 年，中国的汽车平行出口量超过 30 万辆，是 2021 年二手车出口总量的 20 倍有余。\n2024 年，踌躇满志的安岚制定了 2 亿元的营收目标。但与此同时，也有不少同行正在悄悄撤离这个行业。\n混乱是阶梯\n比什凯克，吉尔吉斯斯坦的首都，目前是中国汽车出口到俄罗斯的中转站，也是安岚的考察地。\n混乱，是这里给她的第一印象。行色匆忙的中国商人，满载着中国汽车的托运车，是她在比什凯克看到最多的景象，\u0026ldquo;就像一个巨型露天集市一样\u0026rdquo;。\n所有混乱都指向一个判断：目前在俄罗斯，中国汽车不愁卖不动。\n据乘联会数据，2023 年，中国出口俄罗斯汽车销量为 91 万辆，同比增长 459%，是中国汽车出口增量最大的单一市场。\n混乱也让安岚意识到，这一行还没有明显的壁垒，这意味着普通人也可以参与。她摸索出了一个低成本的商业模式：把汽车素材发到 TikTok、Facebook 和 instagram 上，吸引吉国的经销商私信下单，她再从国内 4S 店或车企的大客户渠道拿到车发给客户。\n注册账号、线上展示、获取流量、在线沟通\u0026hellip;\u0026hellip;对有互联网大厂工作经验的安岚而言，这一套可谓轻车熟路。她在社交平台上投入的推广费一共只有 2000 元左右，\u0026ldquo;公司就我和老公两个人，办公场地在家，办公设施就是两台电脑，两部手机\u0026rdquo;。\n不过安岚很快就发现，她把这件事想简单了。\n客户找安岚下单后，需要先向她支付订单总金额 30% 的预付款，再由她全款订购客户需要的汽车，这就需要安岚先垫付剩下 70% 的资金。\n在等待第一笔订单到来的时间里，安岚是在忐忑中度过的，因为她无法预测第一笔订单会有多少辆车、需要垫多少钱、这笔钱家里能不能拿出来。\n9 月下旬，安岚从 Instagram 上收获了第一笔订单：4 辆蓝色吉利星越L，客户来自俄罗斯。想完成这笔订单，她得垫付近 60 万元。\u0026ldquo;这笔钱对我来说已经压力很大了，下次如果客户下单 40 辆，又该怎么办？\u0026rdquo;\n她想起来自己有一位做外贸的朋友，通过朋友介绍，她向一家二手汽车出口试点企业提交了垫资申请。因为手中有订单，申请得到了批准，这笔订单也顺利成交。\n通过这笔交易，安岚跑通了卖车的整个流程。\n在这次淘金之旅中，带给安岚最多收益的是新能源汽车。2023 年第四季度，新能源汽车出口带来的营收占了安岚总营收的 80%，其中理想汽车贡献了近一半。\n第一笔新能源汽车订单是 10 月初拿到的，6 辆理想 L9。安岚告诉雪豹财经社，一直到 10 月底，理想的询单量占比一直在六成左右，那段时间，她经常回复询单到凌晨两点，\u0026ldquo;早上醒来，就躺在床上继续回复\u0026rdquo;。\n安岚也闹不清为什么理想汽车的订单突然增加，\u0026ldquo;可能因为有俄罗斯的网红在推吧？\u0026ldquo;她没空琢磨这些，暴增的询单量和寻找车源的工作已经让她忙得焦头烂额。\n安岚狂飙的\u0026quot;小生意\u0026rdquo;，亦是中国新能源汽车海外销量走势的缩影。据中汽协数据，2023 年，中国新能源汽车出口量达 120.3 万辆，同比增长 77.6%，创历史新高，占乘用车出口总量的 24.5%。\n风口从何而来\n与安岚一样在俄罗斯市场赚到钱的，还有某汽贸公司合伙人方超（化名）。在 2023 年 3 月决定去俄罗斯试水后，他的公司利润翻了近一倍，俄罗斯市场贡献了总盈利的近 60%。\n2022 年 2 月，俄乌冲突爆发。因为战争原因，大众、本田、宝马、奔驰、通用和捷豹路虎等多家汽车制造商宣布暂停向俄罗斯市场供货。\n欧美日车企的退出，为中国汽车让出了市场空间。某车企销售部门主管表示，丰田关闭了俄罗斯工厂，导致丰田 CR-V 在当地出现缺货、缺零部件的情况，这有利于其竞品销售。\n在方超印象中，从 2022 年下半年起，俄罗斯就成了国内汽车出口行业的高频词。但面对机会，一向谨慎的他决定先观望，一是先看看别人能不能跑通交易链路，二是再观察下市场趋势。\n2019 年，中国开放了二手车出口试点工作。据中国汽车流通协会数据显示，2022 年，二手车出口量由上一年的 1.5 万辆增至 6.9 万辆。\u0026ldquo;平行出口的本质就是二手车出口，当时这个数量级的样本还是太小了。\u0026rdquo;\n进入 2023 年，国内车市愈演愈烈的价格战让方超将试水俄罗斯市场提上了日程。\u0026ldquo;国内太卷，必须要出去找找机会了。\u0026rdquo;\n进入俄罗斯市场后，他很快发现，当地本土汽车工业孱弱，产品难以与中国汽车竞争。\n国金证券在一份研报中表示，俄罗斯所处的东欧地区汽车产业薄弱，自上世纪 90 年代初期之后就停滞不前，俄罗斯国民汽车品牌拉达所销售的均是低端产品。\n在方超经手的品牌中，有一个新能源汽车品牌被俄罗斯客户称赞科技感强、内饰精致，是合格的富人玩具。\u0026ldquo;客户接收一批该品牌的车后，很快就会复购下单。\u0026ldquo;这个品牌，是最近深陷停工停产风波的高合。\n何去何从\n有 20 年汽车内贸从业经历的高鹏（化名），曾因车企的压货和价格内卷萌生了改行的想法。去年从俄罗斯客户那里赚到的钱，挽救了他对汽车行业的热情。\n但进入 11 月之后，这份热情又开始逐渐消散，\u0026ldquo;也就 6 月到 10 月这段时间过得比较舒服\u0026rdquo;。\n高鹏向雪豹财经社表示，在去年 11 月之前，以吉利星越L这款车为例，算上差价和退税，\u0026ldquo;一辆车最多能赚 3000 美元左右\u0026rdquo;。与之对比，据国泰君安（香港）估算，2023 年，国内汽车龙头公司比亚迪的单车利润约为 1 万元人民币。\n但进入 11 月后，吉利星越L的利润空间几乎每天都在缩小。12 月，高鹏已经无法从该车型中赚到差价。\n信息差被逐渐抹平，是差价消失的原因之一。\n去年年底，一位俄罗斯客户曾给他发来了一张表格，里面罗列了他出售汽车的每项费用。\u0026ldquo;很尴尬，被对方看透底牌了，以前赚了人家多少钱，现在对方都能算出来。\u0026ldquo;高鹏告诉雪豹财经社。\n高鹏回忆，一直到去年 10 月，他的俄罗斯客户都不懂退税是什么。但两个月之后，几乎所有客户都知道退税的事了，这导致他在交易中需要将税点金额提前算到订单总金额中，然后为客户垫付，相当于让税点。\n安岚比高鹏更早感受到了价格的内卷。早在她去比什凯克考察时，就已经了解到有中国商人在给国外客户让税点。\n觅食者越来越多也加速了差价的消失。据高鹏估算，在他入局之初的 2023 年 4 月，有约 800 家中国公司从事向俄罗斯市场出口汽车的业务，到年底，这一数字已至少增加到 2000 家。\n涌进的人越来越多，迈进俄罗斯市场的门槛却越来越高。\n2023 年 8 月初，俄罗斯上调了进口汽车报废税，其中乘用车报废税系数将增加 1.7～3.7 倍。财通证券在一份研报中表示，报废税新规实施后将提升进口车的价格，有利于保护俄罗斯本土汽车制造商的利益。\n另一把达摩克利斯之剑也在缓缓落下。\n自 2023 年 7 月起，长城、比亚迪相继宣布在乌兹别克斯坦实现本地化生产和建厂。11 月，极氪在哈萨克斯坦最大城市阿拉木图举办上市发布会，宣布旗下部分车型开始在当地售卖。车企入局将进一步改变俄罗斯市场的供求关系。\n高鹏的判断是，\u0026ldquo;现在已经供过于求了\u0026rdquo;。方超则表示，自己之所以没去对新能源汽车更友好的东南亚市场，就是因为比亚迪和哪吒都在该地区建了厂，并建立了销售网络。\n面对越来越拥挤的环境，从业者们开始寻找新出路。\n方超打算今年去欧洲寻找新增量。他深知进入欧洲市场的资金、专业和信息门槛都比俄罗斯要高得多，但门槛高也意味着玩家少，\u0026ldquo;风浪越大，鱼越贵\u0026rdquo;。\n高鹏则转型为\u0026quot;卖水人\u0026rdquo;。\u0026ldquo;我正在开拓汽车出口咨询业务，让之前的俄罗斯客户能更方便地买到中国汽车。\u0026ldquo;高鹏告诉雪豹财经社。通过这样的服务，他希望能从老客户那里赚取稳定增长的服务费，\u0026quot;（直接卖车）已经不是一个能赚到快钱的行业了\u0026rdquo;。\n","permalink":"https://teacher002.github.io/posts/%E6%88%91%E5%9C%A8tiktok%E4%B8%8A%E5%8D%96%E8%BD%A6%E7%BB%99%E8%80%81%E5%A4%96%E4%B8%89%E4%B8%AA%E6%9C%88%E5%85%A5%E8%B4%A62000%E4%B8%87/","tags":null,"title":"我在TikTok上卖车给老外，三个月入账2000万"},{"categories":["不止编程"],"content":"1冒泡排序(Bubble Sort) 时间复杂度: $O(n^2)$\nvoid mp()//自定义mp()函数 { for(int i=1;i\u0026lt;=n-1;i++) { for(int j=1;j\u0026lt;=n-i;j++) { if(a[j]\u0026gt;a[j+1])//相邻元素比较，若逆序则交换（升序为左大于右，降序反之) { swap(a[j],a[j+1]); } } } } 2选择排序(Selection sort) 讲解:它的工作原理是：第一次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，然后再从剩余的未排序元素中寻找到最小（大）元素，然后放到已排序的序列的末尾。以此类推，直到全部待排序的数据元素的个数为零。选择排序是不稳定的排序方法。\n最好复杂度:$O(n^2)$\n最坏复杂度:$O(n^2)$\nvoid sz() { for(int i=1;i\u0026lt;=n-1;i++) { int minn=i; for(int j=1;j\u0026lt;=n-i;j++) { if(a[j]\u0026lt;a[minn]) { minn=j; } } swap(a[j],a[minn]); } } 3插入排序(Insertion Sort) 讲解:它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。\n时间复杂度:$O(N^ ( 1-2) )$\nvoid cr() { for(int i=2;i\u0026lt;=n;i++) { int k=1; int tmp =a[i]; while(a[k]\u0026lt;a[i]) { k++; } for(int j=i-1;j\u0026gt;=k;j--) { a[j+1]=a[j]; } a[k]=tmp;//插入 } } 4Sort排序 时间复杂度:$O(nlogn)$\nbool cmp(int a,int b) { return a \u0026lt; b; } int main() { sort(a,a+n+1,cmp); } ","permalink":"https://teacher002.github.io/posts/%E5%B8%B8%E7%94%A8%E6%8E%92%E5%BA%8F/","tags":["C++"],"title":"常用排序"},{"categories":null,"content":" 环境环境 1.1 安装Git 请参考【1】 e 1.2 安装node.js 下载：http://nodejs.org/download/ 可以下载 node-v0.10.33-x64.msi\n安装时直接保持默认配置即可。\nNOTE：Hexo 3.9.0要求nodejs版本\u0026gt;6.9.0\nUbuntu下，直接执行下面的命令安装即可：\nsudo apt-get install nodejs sudo apt-get install npm\n配置Github 1.1 建立Repository 建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】 1.2 配置SSH-Key 参考【1】\n安装Hexo 关于Hexo的安装配置过程，请以官方Hexo【2】给出的步骤为准。 3.1 Installation 打开Git命令行，执行如下命令\n$ npm install -g hexo 3.2 Quick Start\nSetup your blog 在电脑中建立一个名字叫「Hexo」的文件夹（比如我建在了D:\\Hexo），然后在此文件夹中右键打开Git Bash。执行下面的命令\n$ hexo init [info] Copying data [info] You are almost done! Don\u0026rsquo;t forget to run npm install before you start b logging with Hexo! Hexo随后会自动在目标文件夹建立网站所需要的文件。然后按照提示，运行 npm install（在 /D/Hexo下）\nnpm install 会在D:\\Hexo目录中安装 node_modules。\nStart the server 运行下面的命令（在 /D/Hexo下）\n$ hexo server [info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 表明Hexo Server已经启动了，在浏览器中打开 http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。\n你可以按Ctrl+C 停止Server。\nCreate a new post 新打开一个git bash命令行窗口，cd到/D/Hexo下，执行下面的命令\n$ hexo new \u0026ldquo;My New Post\u0026rdquo; [info] File created at d:\\Hexo\\source_posts\\My-New-Post.md 刷新http://localhost:4000/，可以发现已生成了一篇新文章 \u0026ldquo;My New Post\u0026rdquo;。\nNOTE：\n有一个问题，发现 \u0026ldquo;My New Post\u0026rdquo; 被发了2遍，在Hexo server所在的git bash窗口也能看到create了2次。\n$ hexo server [info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. [create] d:\\Hexo\\source_posts\\My-New-Post.md [create] d:\\Hexo\\source_posts\\My-New-Post.md 经验证，在hexo new \u0026ldquo;My New Post\u0026rdquo; 时，如果按Ctrl+C将hexo server停掉，就不会出现发2次的问题了。\n所以，在hexo new文章时，需要stop server。\nGenerate static files 执行下面的命令，将markdown文件生成静态网页。\n$ hexo generate 该命令执行完后，会在 D:\\Hexo\\public\\ 目录下生成一系列html，css等文件。\n编辑文章 hexo new \u0026ldquo;My New Post\u0026quot;会在D:\\Hexo\\source_posts目录下生成一个markdown文件：My-New-Post.md\n可以使用一个支持markdown语法的编辑器（比如 Sublime Text 2）来编辑该文件。\n部署到Github 部署到Github前需要配置_config.yml文件，首先找到下面的内容\nDeployment Docs: http://hexo.io/docs/deployment.html deploy: type: 然后将它们修改为\n复制代码\nDeployment Docs: http://hexo.io/docs/deployment.html deploy: type: github repository: git@github.com :zhchnchn/zhchnchn.github.io.git branch: master 复制代码 NOTE1:\nRepository：必须是SSH形式的url（git@github.com:zhchnchn/zhchnchn.github.io.git），而不能是HTTPS形式的url（https://github.com/zhchnchn/zhchnchn.github.io.git），否则会出现错误：\n$ hexo deploy [info] Start deploying: github [error] https://github.com/zhchnchn/zhchnchn.github.io is not a valid repositor URL! 使用SSH url，如果电脑没有开放SSH 端口，会致部署失败。\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights and the repository exists. NOTE2：\n如果你是为一个项目制作网站，那么需要把branch设置为gh-pages。\n测试 当部署完成后，在浏览器中打开http://zhchnchn.github.io/（https://zhchnchn.github.io/） ，正常显示网页，表明部署成功。\n总结：部署步骤 每次部署的步骤，可按以下三步来进行。\nhexo clean hexo generate hexo deploy 9. 总结：本地调试\n在执行下面的命令后， $ hexo g #生成 $ hexo s #启动本地服务，进行文章预览调试 浏览器输入http://localhost:4000，查看搭建效果。此后的每次变更_config.yml 文件或者新建文件都可以先用此命令调试，尤其是当你想调试新添加的主题时。\n可以用简化的一条命令 hexo s -g 3.3 命令总结 3.3.1 常用命令 复制代码 hexo new \u0026ldquo;postName\u0026rdquo; #新建文章 hexo new page \u0026ldquo;pageName\u0026rdquo; #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，\u0026lsquo;ctrl + c\u0026rsquo;关闭server） hexo deploy #将.deploy目录部署到GitHub hexo help # 查看帮助 hexo version #查看Hexo的版本 复制代码 3.3.2 复合命令 hexo deploy -g\n#生成加部署 hexo server -g\n#生成加预览 命令的简写为：\nhexo n == hexo new hexo g == hexo generate hexo s == hexo server hexo d == hexo deploy 4 配置Hexo 4.1 配置文件介绍 下面的各个部分的介绍，请直接参考【3】。\n默认目录结构介绍\n_config.yml配置文件介绍\nNOTE：在修改_config.yml配置文件时，按照【3】的介绍进行修改后，重新 hexo clean 或者hexo deploy时，可能会出现如下错误：\n复制代码 $ hexo clean [error] { name: \u0026lsquo;HexoError\u0026rsquo;, reason: \u0026lsquo;can not read a block mapping entry; a multiline key may not be an imp licit key\u0026rsquo;, mark: { name: null, buffer: \u0026lsquo;# Hexo Configuration\\n## Docs: http://hexo.io/docs/configuration.h tml\\n## Source: https://github.com/hexojs/hexo/ \\n\\n# Site\\ntitle: Zhchnchn\\nsubt itle: Coding on the way\\ndescription: Zhchnchn's blog\\nauthor: Zhchnchn\\nemail: 115063497@qq.com \\nlanguage:zh-CN\\n\\n# URL\\n## If your site is put in a subdirect \u0026hellip;\u0026hellip; , position: 249, line: 12, column: 0 }, message: \u0026lsquo;Config file load failed\u0026rsquo;, domain: { domain: null, _events: { error: [Function] }, _maxListeners: 10, members: [ [Object] ] }, domainThrown: true, stack: undefined } 复制代码 我的_config.yml配置文件是一个空行，所以错误肯定在前面，经过对比发现，我前面修改了一下 # Site的各项设置，在冒号:后面没留空格导致了该问题，请对比一下下面的区别：\n错误的设置：\nauthor:Zhchnchn email:XXX@qq.com language:zh-CN 正确的设置：\nauthor: Zhchnchn email: XXX@qq.com language: zh-CN 3. 各个主题下的目录介绍（hexo\\themes\\下的modernist主题为例）\n4.2 安装主题 Hexo提供了很多主题，具体可参见Hexo Themes【4】。这里我选择使用Pacman主题。具体设置方法如下【5】\n4.2.1 安装\n将Git Shell 切到/D/Hexo目录下，然后执行下面的命令，将pacman下载到 themes/pacman 目录下。 $ git clone https://github.com/A-limon/pacman.git themes/pacman 2. 修改你的博客根目录/D/Hexo下的config.yml配置文件中的theme属性，将其设置为pacman。\n更新pacman主题 cd themes/pacman git pull NOTE：先备份_config.yml 文件后再升级\n4.2.2 配置 如果pacman的默认设置不能满足需要的话，你可以修改 /themes/pacman/下的配置文件_config.yml来定制。\n各个config的含义，请参考【5】中的介绍。\n4.2.3 评论框 静态博客要使用第三方评论系统，pacman配置了多说评论系统（/themes/pacman/_config.yml），默认关闭，只要将其打开即可:false-\u0026gt;true。直接用你的微博/豆瓣/人人/百度/开心网帐号登录多说，即可发表平评论。\nComment duoshuo: enable: true ## duoshuo.com short_name: ## duoshuo short name. 4.2.3 统计\npacman配置了google analysis系统（/themes/pacman/_config.yml），默认关闭，将其打开。\n需要注册google analysis服务，以获得 跟踪 ID。\n如果已有google账户的话，可以直接注册。注册时，需要正确填写 网站的URL。注册成功后，会得到一个跟踪ID，以及一段跟踪代码。\npacman配置了google analysis系统，将其打开 Analytics google_analytics: enable: true id: UA-57032437-1 ## e.g. UA-1766729-8 your google analytics ID. site: auto ## e.g. yangjian.me your google analytics site or set the value as auto. 4. 在themes\\pacman\\layout_partial\\google_analytics.ejs 中，已经将google的跟踪代码添加进来了【3】。\n复制代码 \u0026lt;% if (theme.google_analytics.enable){ %\u0026gt;\n\u0026lt;% } %\u0026gt; 复制代码 而且会将/themes/pacman/_config.yml中的id和site值读取进来。\n如果设置不起作用，请试试在\\themes\\pacman\\layout_partial\\head.ejs文件中最后，之前，添加上下面的语句试试。 \u0026lt;%- partial(\u0026lsquo;google_analytics\u0026rsquo;) %\u0026gt; 4.3 Custom 404页面\n网上大多数教程都将其说的极其简单：“直接在根目录下创建自己的 404.html 就可以”。但我却在这儿废了不少时间，究其原因是大家觉得太简单而说的不够明白。“根目录下”指的不是Hexo目录下，而是Hexo/source目录下。\n404.html的内容可以设置为下面的内容【6】（NOTE： _config.yml中的permalink_defaults属性不需要修改）。\n复制代码 layout: default 4.4 安装插件 4.4.1 sitemap插件\n可以将你站点地图提交给搜索引擎，文件路径\\sitemap.xml。\n安装\n$ npm install\nhexo-generator-sitemap 启用，修改Hexo_config.yml，增加以下内容 复制代码\n# Extensions\rPlugins:\r- hexo-generator-sitemap #sitemap\rsitemap:\rpath: sitemap.xml 复制代码 4. 使用方法\n（1）访问 http://localhost:4000/sitemap.xml，即可看到站点地图。\n（2）那么怎么将它显示在页面中呢【7】？\n可以修改themes/pacman（也就是你正在使用的那个theme）下的 _config.yml，在 menu 节点下添加下面的内容（下面要介绍的RSS插件也同样）\nmenu: Home: / Archives: /archives Rss: /atom.xml Sitemap: /sitemap.xml 修改后的效果如图所示：\n如何向google提交sitemap Sitemap 可方便管理员通知搜索引擎他们网站上有哪些可供抓取的网页。向google提交自己hexo博客的sitemap，有助于让别人更好地通过google搜索到自己的博客。\n如何向google提交sitemap，请参考【8】。\n升级插件 $ npm update 卸载插件 $ npm uninstall hexo-generator-sitemap 4.4.2 feed插件\nRSS的生成插件，你可以在配置显示你站点的RSS，文件路径\\atom.xml。\n安装\n$ npm install hexo-generator-feed 3. 启用，修改Hexo_config.yml，增加以下内容\n复制代码\nExtensions Plugins:\nhexo-generator-feed hexo-generator-sitemap #Feed Atom feed: type: atom path: atom.xml limit: 20 复制代码 4.使用方法\n参见sitemap插件介绍\n优化Hexo 5.1 添加“Fork me on Github” ribbon 给blog主页添加一个“Fork me on Github”的绶带（ribbon）【9】，比如选择了红色的ribbon，将相应代码复制到Hexo正在使用的theme下layout.ejs中。比如我使用的pacman theme，那么将下面的代码（注意将you改为你自己的github上的注册名） 粘贴到 themes\\pacman\\layout\\layout.ejs中，放置在 最后，标签之前即可。\n6 其他 6.1 中文乱码 在md 文件中写中文内容，发布出来后为乱码，原因是md的编码不对，将md文件另存为“UTF-8”编码的文件即可解决问题。\nReferences 【1】Windows下Git安装指南（http://www.cnblogs.com/zhcncn/p/3787849.html）\n【2】Hexo （https://github.com/hexojs/hexo）\n【3】hexo你的博客（http://ibruce.info/2013/11/22/hexo-your-blog/）\n【4】Hexo All Themes（https://github.com/hexojs/hexo/wiki/Themes）\n【5】Pacman主题介绍（http://yangjian.me/pacman/hello/introducing-pacman-theme/）\n【6】hexo添加404页面(http://ruocaiwu.github.io/2014/08/14/hexo%E6%B7%BB%E5%8A%A0404%E9%A1%B5%E9%9D%A2/ )\n【7】如何搭建一个独立博客——简明Github Pages与Hexo教程（http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/）\n【8】如何向google提交sitemap（详细）(http://fionat.github.io/blog/2013/10/23/sitemap/ )\n【9】GitHub Ribbons(https://github.com/blog/273-github-ribbons )\n","permalink":"https://teacher002.github.io/posts/%E9%83%A8%E7%BD%B2hexo/","tags":null,"title":"部署Hexo"},{"categories":null,"content":"正文 准备: 1 要注册Github的账号 2 下载Git 3 下载并安装好Hugo 1 在终端\u0026amp;cmd当中输入hugo version验证是否安装好hugo,安装完成会出现版本号。如图: 2 在cmd\u0026amp;终端当中输入hugo new site xxxx(xxxx为你的博客文件名称),在所对应的文件夹中查看是否显示有xxxx名称的文件夹。打开之后再用cmd\u0026amp;终端打开,再次输入hugo new posts/xxxx.md(xxxx为你创建的第一个博文的名称,然后文件必须以MarkDown语法编辑,不能是用Html及其他语言) 在你创建的文件中打开content/posts/xxxx.md，在里面进行修改,例如draft=true,要修改为false(因为true是一个草稿,而false可以直接显示在你的网站中\u0026amp;本地运行) 未完待续~ ","permalink":"https://teacher002.github.io/posts/%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2/","tags":null,"title":"部署Hugo博客"},{"categories":null,"content":"题目描述 编写一个能够输出 Hello,World! 的程序。\n提示：\n使用英文标点符号； Hello,World! 逗号后面没有空格。 H 和 W 为大写字母。 无 Hello,World! 代码 PHP Hello,World! C++ #include \u0026lt;iostream\u0026gt; using namespace std; int main () { cout\u0026lt;\u0026lt;\u0026#34;Hello World!\u0026#34;; return 0; } ","permalink":"https://teacher002.github.io/posts/helloworld/","tags":null,"title":"HelloWorld"},{"categories":["编程"],"content":"部署: 这里提供了几套方案帮助您建立自己的站点，请选择适合您的方案并继续。 搭建过程中如果遇到问题欢迎 联系我们 提问。\n服务器选择 不同服务商提供的 $\\texttt{CPU}$ 主频不同，下方数据仅供参考。 最低服务器配置： $\\texttt{CPU}$: 1核 内存: 2G。（约可允许 100 人使用 请尽量不要使用突发性能实例或共享型实例，这可能会导致评测时间计量不准确 CentOS 8 已于 2021-12-31 停止支持，后续不会为安全漏洞发布补丁，建议重装为其他操作系统。 如果使用虚拟机安装，推荐购买 UPS 保证供电稳定或是经常备份，突然断电易导致数据库损坏无法读取！ $\\texttt{Tips}$: 兼容大部分 $\\texttt{Linux}$ 发行版，推荐使用 $\\texttt{Ubuntu}$ 22.04 （教程多，成功率高，上手简单），以下列表中系统不受支持：$CentOS$ $Alibaba Cloud Linux$ $TencentOS$\n$\\texttt{Tips}$: $Hydro$ 需要使用以下端口： $80$, $443$, $2019$, $88884, $5050$, $27017$，请确保这些端口空闲。 安装和安装后的所有操作均需要在 $\\texttt{root}$ 权限下进行！（$\\texttt{sudo su}$）。 宝塔面板已知出现多次高危漏洞，为防止数据丢失，请不要在生产环境中使用！\n在终端运行下面的脚本，等待几分钟即可（建议复制防止敲错）： LANG=zh . \u0026lt;(curl https://hydro.ac/setup.sh) Tips: 如果有特殊需求，安装脚本支持一些可选的高级选项，以此方式调用： . \u0026lt;(curl https://hydro.ac/setup.sh ) \u0026ndash;foo \u0026ndash;bar \u0026ndash;no-caddy 不配置安装反向代理，只监听8888端口 \u0026ndash;judge 仅作为独立评测机安装\n阿里云/腾讯云/华为云等等用户安装后如果不能访问 请百度搜索 xx云 放行80端口 脚本默认使用的为清华大学镜像。 安装完成后，从 http://服务器ip/ 访问网页端，注册一个账号，之后在终端中使用 hydrooj cli user setSuperAdmin 2 将首个注册用户设置为超级管理员。之后刷新页面，您应当能在上方导航栏看到控制面板入口。 进入控制面板，右侧系统设置，验证管理员密码后按需修改配置，注意 Server BaseURL 一项需要填写访问网站用的完整的 URL，以 / 结尾。（重要，务必正确填写，样例：https://hydro.ac/） 系统安装后需要题库，可前往 https://hydro.ac/d/tk/p 免费专区进行下载，支持批量导入。 至此，基础功能安装已全部完成，另，如果你的服务部署在内网，且希望外网的用户可以访问，可以百度搜索 “端口映射” 相关教程。 ","permalink":"https://teacher002.github.io/posts/%E9%83%A8%E7%BD%B2hydrooj/","tags":["HydroOJ","网站","Web"],"title":"部署HydroOJ"},{"categories":null,"content":"#Hello World C++代码\n题目描述 编写一个能够输出 Hello,World! 的程序。\n提示：\n使用英文标点符号； Hello,World! 逗号后面没有空格。 H 和 W 为大写字母。 无 Hello,World! 代码 PHP Hello,World! C++ #include \u0026lt;iostream\u0026gt; using namespace std; int main () { cout\u0026lt;\u0026lt;\u0026#34;Hello World!\u0026#34;; return 0; } ","permalink":"https://teacher002.github.io/posts/1/","tags":null,"title":"1"},{"categories":["编程"],"content":"编译器Dev-C++的安装及使用 1.Dev-C++的安装 下载链接: https://acm.nyist.edu.cn/file/2/Dev-Cpp_5.11_TDM-GCC_4.9.2_Setup.exe ​下载​: 点击此处 下载\n安装\n点击安装包 选择英文 点击ok\n选择我同意\n无脑选下一步\n路径改不改都可 占不了多少空间\n等待安装完毕 点击完成\n选择语言为中文\n选择喜欢的主题\n点击ok 安装完成\n2.Dev-C++的使用 Dev-C++的界面和常用按钮\n主界面 常用按钮 功能 图标 快捷键 新建 Ctrl+N 编译 F9 运行 F10 编译运行 F11 调试 F5 使用Dev-C++的第一个程序\n点击 文件-\u0026gt;新建-\u0026gt;源代码 并在界面中输入以下代码\n#include\u0026lt;stdio.h\u0026gt; int main(){ printf(\u0026#34;Hello World!\u0026#34;); } Copy 输入完成后 点击编译按钮 进行编译 等待编译完成\n若编译出错 如下图 请检查代码\n编译成功后即可点击运行按钮 进行运行\n使用Dev-C++进行程序调试\n什么是调试\n在我们日常的编写程序中难免会遇到一些小的bug，我们通过阅读代码的方式可能并不好揪出它们，这时我们就需要对着程序一步一步走，这就是调试\n初次使用的设置\n选择 工具-\u0026gt;编译选项\n选择 代码生成/优化-\u0026gt;连接器 并更改产生调试信息为\u0026quot;YES\u0026quot; 并确定;\n重新启动编译器 或者重新编译\n调试\n设置断点（点击调试按钮程序会自动暂停的地方）点击代码行的编号如下图(会出现 标志)\n点击调试按钮 开始调试 如下图\n使用 按钮进行对应的操作 进行调试这里不再赘述\n","permalink":"https://teacher002.github.io/posts/devc++%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/","tags":["C++"],"title":"Dev-C++安装教程"},{"categories":null,"content":"","permalink":"https://teacher002.github.io/search/_index.es/","tags":null,"title":""},{"categories":null,"content":"","permalink":"https://teacher002.github.io/search/_index.fr/","tags":null,"title":""},{"categories":null,"content":"","permalink":"https://teacher002.github.io/search/_index.hi/","tags":null,"title":""},{"categories":null,"content":"","permalink":"https://teacher002.github.io/search/_index.jp/","tags":null,"title":""},{"categories":null,"content":"","permalink":"https://teacher002.github.io/search/_index.pl/","tags":null,"title":""},{"categories":null,"content":"","permalink":"https://teacher002.github.io/search/_index.ru/","tags":null,"title":""},{"categories":null,"content":"","permalink":"https://teacher002.github.io/search/_index.zh-cn/","tags":null,"title":""}]